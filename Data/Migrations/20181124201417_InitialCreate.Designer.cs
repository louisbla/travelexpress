// <auto-generated />
using System;
using Garderie.Data;
using Garderie.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Garderie.Migrations
{
    [DbContext(typeof(GarderieContext))]
    [Migration("20181124201417_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Garderie.Models.Activite", b =>
                {
                    b.Property<int>("ActiviteId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Lieu")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<int?>("NbEnfantsMax");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<byte?>("Visible");

                    b.HasKey("ActiviteId");

                    b.ToTable("Activites");
                });

            modelBuilder.Entity("Garderie.Models.Adresse", b =>
                {
                    b.Property<int>("AdresseId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CodePostal")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("Ligne1")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Ligne2")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Ligne3")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("Pays")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("Ville")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Visible");

                    b.HasKey("AdresseId");

                    b.ToTable("Adresses");
                });

            modelBuilder.Entity("Garderie.Models.Article", b =>
                {
                    b.Property<int>("ArticleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategorieId");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("EnfantInventaireId");

                    b.Property<int?>("InventaireId");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("Quantite");

                    b.Property<byte?>("Visible");

                    b.HasKey("ArticleId");

                    b.HasIndex("CategorieId");

                    b.HasIndex("EnfantInventaireId");

                    b.HasIndex("InventaireId");

                    b.ToTable("Articles");
                });

            modelBuilder.Entity("Garderie.Models.Calendrier", b =>
                {
                    b.Property<int>("CalendrierId");

                    b.Property<int>("EmployeId");

                    b.Property<DateTime?>("DateDebut")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DateFin")
                        .HasColumnType("date");

                    b.Property<byte?>("Visible");

                    b.HasKey("CalendrierId", "EmployeId");

                    b.HasIndex("EmployeId");

                    b.ToTable("Calendriers");
                });

            modelBuilder.Entity("Garderie.Models.CategorieArticle", b =>
                {
                    b.Property<int>("CategorieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<byte?>("Visible");

                    b.HasKey("CategorieId");

                    b.ToTable("CategoriesArticle");
                });

            modelBuilder.Entity("Garderie.Models.CompteUser", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Login")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Password")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<int>("PersonneId");

                    b.Property<byte>("Privilege");

                    b.Property<byte?>("Visible");

                    b.HasKey("UserId");

                    b.HasIndex("PersonneId");

                    b.ToTable("ComptesUser");
                });

            modelBuilder.Entity("Garderie.Models.Conge", b =>
                {
                    b.Property<int>("CongeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("Debut")
                        .HasColumnType("date");

                    b.Property<int>("DossierEmployeId");

                    b.Property<int?>("Duree");

                    b.Property<int>("TypeCongeId");

                    b.Property<byte?>("Visible");

                    b.HasKey("CongeId");

                    b.HasIndex("DossierEmployeId");

                    b.HasIndex("TypeCongeId");

                    b.ToTable("Conges");
                });

            modelBuilder.Entity("Garderie.Models.ContactUrgence", b =>
                {
                    b.Property<int>("ContactId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContactPersonneId");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("ContactId");

                    b.HasIndex("ContactPersonneId");

                    b.ToTable("ContactsUrgence");
                });

            modelBuilder.Entity("Garderie.Models.DocumentOfficiel", b =>
                {
                    b.Property<int>("DocumentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DossierId");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Url")
                        .HasColumnType("text");

                    b.Property<byte?>("Visible");

                    b.HasKey("DocumentId");

                    b.HasIndex("DossierId");

                    b.ToTable("DocumentsOfficiels");
                });

            modelBuilder.Entity("Garderie.Models.DossiersContactUrgence", b =>
                {
                    b.Property<int>("DossierContactUrgenceId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ContactId");

                    b.Property<int>("DossierInscriptionId");

                    b.Property<string>("LienParente")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<byte>("Visible");

                    b.HasKey("DossierContactUrgenceId");

                    b.HasIndex("ContactId");

                    b.HasIndex("DossierInscriptionId");

                    b.ToTable("DossiersContactUrgence");
                });

            modelBuilder.Entity("Garderie.Models.DossiersEmploye", b =>
                {
                    b.Property<int>("DossierId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateEntree")
                        .HasColumnType("date");

                    b.Property<int>("EmployeId");

                    b.Property<int?>("NbMoisAnciennete");

                    b.Property<double?>("TauxHoraireBrut");

                    b.Property<int>("TypeContratId");

                    b.Property<byte?>("Visible");

                    b.HasKey("DossierId");

                    b.HasIndex("EmployeId");

                    b.HasIndex("TypeContratId");

                    b.ToTable("DossiersEmploye");
                });

            modelBuilder.Entity("Garderie.Models.DossiersInscription", b =>
                {
                    b.Property<int>("DossierId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateInscription")
                        .HasColumnType("date");

                    b.Property<int>("EnfantId");

                    b.Property<string>("MedecinTraitant")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("NbDemiJourneesAbsent");

                    b.Property<int?>("NbDemiJourneesInscrit");

                    b.Property<byte?>("Visible");

                    b.HasKey("DossierId");

                    b.HasIndex("EnfantId");

                    b.ToTable("DossiersInscription");
                });

            modelBuilder.Entity("Garderie.Models.Employe", b =>
                {
                    b.Property<int>("EmployeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Externe");

                    b.Property<string>("Poste")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("EmployeId");

                    b.ToTable("Employes");
                });

            modelBuilder.Entity("Garderie.Models.EmployeGroupes", b =>
                {
                    b.Property<int>("GroupeId");

                    b.Property<int>("EmployeId");

                    b.HasKey("GroupeId", "EmployeId");

                    b.HasIndex("EmployeId");

                    b.ToTable("EmployeGroupes");
                });

            modelBuilder.Entity("Garderie.Models.Enfant", b =>
                {
                    b.Property<int>("EnfantId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("GroupeId");

                    b.Property<int>("InventaireEnfantId");

                    b.Property<string>("Photo")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("EnfantId");

                    b.HasIndex("GroupeId");

                    b.HasIndex("InventaireEnfantId");

                    b.ToTable("Enfants");
                });

            modelBuilder.Entity("Garderie.Models.Factures", b =>
                {
                    b.Property<int>("FactureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateEmission")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DatePaiement")
                        .HasColumnType("date");

                    b.Property<double?>("MontantTtc")
                        .HasColumnName("MontantTTC");

                    b.Property<int>("StatutFactureId");

                    b.Property<byte?>("Visible");

                    b.HasKey("FactureId");

                    b.HasIndex("StatutFactureId");

                    b.ToTable("Factures");
                });

            modelBuilder.Entity("Garderie.Models.FichesPaye", b =>
                {
                    b.Property<int>("FichePayeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("DossierEmployeId");

                    b.Property<double>("NbHeuresPrevu");

                    b.Property<double>("NbHeuresReel");

                    b.Property<double>("SalaireBrut");

                    b.Property<byte>("Visible");

                    b.HasKey("FichePayeId");

                    b.HasIndex("DossierEmployeId");

                    b.ToTable("FichesPaye");
                });

            modelBuilder.Entity("Garderie.Models.Filiations", b =>
                {
                    b.Property<int>("ParentId");

                    b.Property<int>("EnfantId");

                    b.Property<string>("LienParente")
                        .HasMaxLength(6)
                        .IsUnicode(false);

                    b.Property<byte>("Visible");

                    b.HasKey("ParentId", "EnfantId");

                    b.HasIndex("EnfantId");

                    b.ToTable("Filiations");
                });

            modelBuilder.Entity("Garderie.Models.Groupes", b =>
                {
                    b.Property<int>("GroupeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriptif")
                        .HasColumnType("text");

                    b.Property<int?>("ReferantId");

                    b.Property<int>("TypeGroupeId");

                    b.Property<byte?>("Visible");

                    b.HasKey("GroupeId");

                    b.HasIndex("ReferantId");

                    b.HasIndex("TypeGroupeId");

                    b.ToTable("Groupes");
                });

            modelBuilder.Entity("Garderie.Models.Horaires", b =>
                {
                    b.Property<int>("HoraireId");

                    b.Property<int>("CalendrierId");

                    b.Property<DateTime?>("Date")
                        .HasColumnType("date");

                    b.Property<int>("EmployeId");

                    b.Property<TimeSpan?>("HeureDebut");

                    b.Property<TimeSpan?>("HeureFin");

                    b.Property<byte?>("Visible");

                    b.HasKey("HoraireId", "CalendrierId");

                    b.HasIndex("CalendrierId", "EmployeId");

                    b.ToTable("Horaires");
                });

            modelBuilder.Entity("Garderie.Models.Inventaires", b =>
                {
                    b.Property<int>("InventaireId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeId");

                    b.Property<int?>("StockActuel");

                    b.Property<int?>("StockMax");

                    b.Property<byte?>("Visible");

                    b.HasKey("InventaireId");

                    b.HasIndex("EmployeId");

                    b.ToTable("Inventaires");
                });

            modelBuilder.Entity("Garderie.Models.InventairesEnfant", b =>
                {
                    b.Property<int>("InventaireId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<byte?>("Visible");

                    b.HasKey("InventaireId");

                    b.ToTable("InventairesEnfant");
                });

            modelBuilder.Entity("Garderie.Models.Lieux", b =>
                {
                    b.Property<int>("SalleId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<byte?>("Occupe");

                    b.Property<byte?>("Visible");

                    b.HasKey("SalleId");

                    b.ToTable("Lieux");
                });

            modelBuilder.Entity("Garderie.Models.LignesFactures", b =>
                {
                    b.Property<int>("LigneId");

                    b.Property<int>("FactureId");

                    b.Property<int>("ObjetFacturableId");

                    b.Property<int?>("Quantite");

                    b.Property<double?>("TotalHt")
                        .HasColumnName("TotalHT");

                    b.Property<double?>("TotalTtc")
                        .HasColumnName("TotalTTC");

                    b.Property<byte?>("Visible");

                    b.HasKey("LigneId", "FactureId");

                    b.HasIndex("ObjetFacturableId");

                    b.ToTable("LignesFactures");
                });

            modelBuilder.Entity("Garderie.Models.Maladies", b =>
                {
                    b.Property<int>("MaladieId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descriptif")
                        .HasColumnType("text");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<byte?>("Visible");

                    b.HasKey("MaladieId");

                    b.ToTable("Maladies");
                });

            modelBuilder.Entity("Garderie.Models.ObjetsFacturables", b =>
                {
                    b.Property<int>("ObjetFacturableId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ActiviteId");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<double?>("PrixHt")
                        .HasColumnName("PrixHT");

                    b.Property<int>("Tvaid")
                        .HasColumnName("TVAId");

                    b.Property<byte?>("Visible");

                    b.HasKey("ObjetFacturableId");

                    b.HasIndex("ActiviteId");

                    b.HasIndex("Tvaid");

                    b.ToTable("ObjetsFacturables");
                });

            modelBuilder.Entity("Garderie.Models.Parent", b =>
                {
                    b.Property<int>("ParentId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("NbEnfantsInscrits");

                    b.Property<string>("Telephone")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.HasKey("ParentId");

                    b.ToTable("Parents");
                });

            modelBuilder.Entity("Garderie.Models.ParentsFactures", b =>
                {
                    b.Property<int>("FactureId");

                    b.Property<int>("ParentId");

                    b.Property<int>("Visible");

                    b.HasKey("FactureId", "ParentId");

                    b.HasIndex("ParentId");

                    b.ToTable("ParentsFactures");
                });

            modelBuilder.Entity("Garderie.Models.Participation", b =>
                {
                    b.Property<int>("ActiviteId");

                    b.Property<int>("GroupeId");

                    b.Property<int>("SalleId");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<byte>("Visible");

                    b.HasKey("ActiviteId", "GroupeId", "SalleId");

                    b.HasIndex("GroupeId");

                    b.HasIndex("SalleId");

                    b.ToTable("Participation");
                });

            modelBuilder.Entity("Garderie.Models.Personne", b =>
                {
                    b.Property<int>("PersonneId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DateNaissance")
                        .HasColumnType("date");

                    b.Property<string>("Discriminator");

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("NumSecu")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Prenom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<string>("Sexe")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<byte?>("Visible");

                    b.HasKey("PersonneId");

                    b.ToTable("Personnes");
                });

            modelBuilder.Entity("Garderie.Models.PersonneAdresse", b =>
                {
                    b.Property<int>("AdresseId");

                    b.Property<int>("PersonneId");

                    b.Property<byte?>("Domicile");

                    b.Property<byte?>("Facturation");

                    b.Property<byte>("Visible");

                    b.HasKey("AdresseId", "PersonneId");

                    b.HasIndex("PersonneId");

                    b.ToTable("PersonneAdresses");
                });

            modelBuilder.Entity("Garderie.Models.RapportJournalier", b =>
                {
                    b.Property<int>("RapportId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("date");

                    b.Property<int>("DossierInscriptionId");

                    b.Property<byte?>("Present");

                    b.Property<string>("Resume")
                        .HasColumnType("text");

                    b.Property<byte?>("Visible");

                    b.HasKey("RapportId");

                    b.HasIndex("DossierInscriptionId");

                    b.ToTable("RapportJournalier");
                });

            modelBuilder.Entity("Garderie.Models.StatutsFacture", b =>
                {
                    b.Property<int>("StatutFactureId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .IsRequired()
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("StatutFactureId");

                    b.ToTable("StatutsFacture");
                });

            modelBuilder.Entity("Garderie.Models.Traitements", b =>
                {
                    b.Property<int>("MaladieId");

                    b.Property<int>("EnfantId");

                    b.Property<int?>("Frequence");

                    b.Property<string>("NomMedicament")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<double?>("Quantite");

                    b.Property<string>("Specification")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Type")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<byte>("Visible");

                    b.HasKey("MaladieId", "EnfantId");

                    b.HasIndex("EnfantId");

                    b.ToTable("Traitements");
                });

            modelBuilder.Entity("Garderie.Models.Tvas", b =>
                {
                    b.Property<int>("Tvaid")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TVAId")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nom")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.Property<double?>("Valeur");

                    b.Property<byte>("Visible");

                    b.HasKey("Tvaid");

                    b.ToTable("TVAs");
                });

            modelBuilder.Entity("Garderie.Models.TypesConges", b =>
                {
                    b.Property<int>("TypeCongeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Type")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.HasKey("TypeCongeId");

                    b.ToTable("TypesConges");
                });

            modelBuilder.Entity("Garderie.Models.TypesContrat", b =>
                {
                    b.Property<int>("TypeContratId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("TypeContratId");

                    b.ToTable("TypesContrat");
                });

            modelBuilder.Entity("Garderie.Models.TypesGroupe", b =>
                {
                    b.Property<int>("TypeGroupeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Libelle")
                        .HasMaxLength(45)
                        .IsUnicode(false);

                    b.HasKey("TypeGroupeId");

                    b.ToTable("TypesGroupe");
                });

            modelBuilder.Entity("Garderie.Models.Article", b =>
                {
                    b.HasOne("Garderie.Models.CategorieArticle", "Categorie")
                        .WithMany("Articles")
                        .HasForeignKey("CategorieId")
                        .HasConstraintName("Articles_CategoriesArticle_FK");

                    b.HasOne("Garderie.Models.InventairesEnfant", "EnfantInventaire")
                        .WithMany("Articles")
                        .HasForeignKey("EnfantInventaireId")
                        .HasConstraintName("Articles_InventairesEnfant_FK");

                    b.HasOne("Garderie.Models.Inventaires", "Inventaire")
                        .WithMany("Articles")
                        .HasForeignKey("InventaireId")
                        .HasConstraintName("Articles_Inventaires_FK");
                });

            modelBuilder.Entity("Garderie.Models.Calendrier", b =>
                {
                    b.HasOne("Garderie.Models.Employe", "Employe")
                        .WithMany("Calendriers")
                        .HasForeignKey("EmployeId")
                        .HasConstraintName("Calendriers_Employes_FK");
                });

            modelBuilder.Entity("Garderie.Models.CompteUser", b =>
                {
                    b.HasOne("Garderie.Models.Personne", "Personne")
                        .WithMany("ComptesUser")
                        .HasForeignKey("PersonneId")
                        .HasConstraintName("ComptesUser_Personnes_FK");
                });

            modelBuilder.Entity("Garderie.Models.Conge", b =>
                {
                    b.HasOne("Garderie.Models.DossiersEmploye", "DossierEmploye")
                        .WithMany("Conges")
                        .HasForeignKey("DossierEmployeId")
                        .HasConstraintName("Conges_DossiersEmploye_FK");

                    b.HasOne("Garderie.Models.TypesConges", "TypeConge")
                        .WithMany("Conges")
                        .HasForeignKey("TypeCongeId")
                        .HasConstraintName("Conges_TypesConges_FK");
                });

            modelBuilder.Entity("Garderie.Models.ContactUrgence", b =>
                {
                    b.HasOne("Garderie.Models.Personne", "Contact")
                        .WithMany()
                        .HasForeignKey("ContactPersonneId");
                });

            modelBuilder.Entity("Garderie.Models.DocumentOfficiel", b =>
                {
                    b.HasOne("Garderie.Models.DossiersInscription", "Dossier")
                        .WithMany("DocumentsOfficiels")
                        .HasForeignKey("DossierId")
                        .HasConstraintName("DocumentsOfficiels_DossiersInscription_FK");
                });

            modelBuilder.Entity("Garderie.Models.DossiersContactUrgence", b =>
                {
                    b.HasOne("Garderie.Models.ContactUrgence", "Contact")
                        .WithMany("DossiersContactUrgence")
                        .HasForeignKey("ContactId")
                        .HasConstraintName("DossiersContactUrgence_ContactsUrgence_FK");

                    b.HasOne("Garderie.Models.DossiersInscription", "DossierInscription")
                        .WithMany("DossiersContactUrgence")
                        .HasForeignKey("DossierInscriptionId")
                        .HasConstraintName("DossiersContactUrgence_DossiersInscription_FK");
                });

            modelBuilder.Entity("Garderie.Models.DossiersEmploye", b =>
                {
                    b.HasOne("Garderie.Models.Employe", "Employe")
                        .WithMany("DossiersEmploye")
                        .HasForeignKey("EmployeId")
                        .HasConstraintName("DossiersEmploye_Employes_FK");

                    b.HasOne("Garderie.Models.TypesContrat", "TypeContrat")
                        .WithMany("DossiersEmploye")
                        .HasForeignKey("TypeContratId")
                        .HasConstraintName("DossiersEmploye_TypesContrat_FK");
                });

            modelBuilder.Entity("Garderie.Models.DossiersInscription", b =>
                {
                    b.HasOne("Garderie.Models.Enfant", "Enfant")
                        .WithMany("DossiersInscription")
                        .HasForeignKey("EnfantId")
                        .HasConstraintName("DossiersInscription_Enfants_FK");
                });

            modelBuilder.Entity("Garderie.Models.Employe", b =>
                {
                    b.HasOne("Garderie.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("EmployeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Garderie.Models.EmployeGroupes", b =>
                {
                    b.HasOne("Garderie.Models.Employe", "Employe")
                        .WithMany("EmployeGroupes")
                        .HasForeignKey("EmployeId")
                        .HasConstraintName("EmployeGroupes_Employes_FK");

                    b.HasOne("Garderie.Models.Groupes", "Groupe")
                        .WithMany("EmployeGroupes")
                        .HasForeignKey("GroupeId")
                        .HasConstraintName("EmployeGroupes_Groupes_FK");
                });

            modelBuilder.Entity("Garderie.Models.Enfant", b =>
                {
                    b.HasOne("Garderie.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("EnfantId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Garderie.Models.Groupes", "Groupe")
                        .WithMany("Enfants")
                        .HasForeignKey("GroupeId")
                        .HasConstraintName("Enfants_Groupes_FK");

                    b.HasOne("Garderie.Models.InventairesEnfant", "InventaireEnfant")
                        .WithMany("Enfants")
                        .HasForeignKey("InventaireEnfantId")
                        .HasConstraintName("Enfants_InventairesEnfant_FK");
                });

            modelBuilder.Entity("Garderie.Models.Factures", b =>
                {
                    b.HasOne("Garderie.Models.StatutsFacture", "StatutFacture")
                        .WithMany("Factures")
                        .HasForeignKey("StatutFactureId")
                        .HasConstraintName("Factures_StatutsFacture_FK");
                });

            modelBuilder.Entity("Garderie.Models.FichesPaye", b =>
                {
                    b.HasOne("Garderie.Models.DossiersEmploye", "DossierEmploye")
                        .WithMany("FichesPaye")
                        .HasForeignKey("DossierEmployeId")
                        .HasConstraintName("FichesPaye_DossiersEmploye_FK");
                });

            modelBuilder.Entity("Garderie.Models.Filiations", b =>
                {
                    b.HasOne("Garderie.Models.Enfant", "Enfant")
                        .WithMany("Filiations")
                        .HasForeignKey("EnfantId")
                        .HasConstraintName("Filiations_Enfants_FK");

                    b.HasOne("Garderie.Models.Parent", "Parent")
                        .WithMany("Filiations")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("Filiations_Parents_FK");
                });

            modelBuilder.Entity("Garderie.Models.Groupes", b =>
                {
                    b.HasOne("Garderie.Models.Employe", "Referant")
                        .WithMany("Groupes")
                        .HasForeignKey("ReferantId")
                        .HasConstraintName("Groupes_Employes_FK");

                    b.HasOne("Garderie.Models.TypesGroupe", "TypeGroupe")
                        .WithMany("Groupes")
                        .HasForeignKey("TypeGroupeId")
                        .HasConstraintName("Groupes_TypesGroupe_FK");
                });

            modelBuilder.Entity("Garderie.Models.Horaires", b =>
                {
                    b.HasOne("Garderie.Models.Calendrier", "Calendriers")
                        .WithMany("Horaires")
                        .HasForeignKey("CalendrierId", "EmployeId")
                        .HasConstraintName("Horaires_Calendriers_FK");
                });

            modelBuilder.Entity("Garderie.Models.Inventaires", b =>
                {
                    b.HasOne("Garderie.Models.Employe", "Employe")
                        .WithMany("Inventaires")
                        .HasForeignKey("EmployeId")
                        .HasConstraintName("Inventaires_Employes_FK");
                });

            modelBuilder.Entity("Garderie.Models.LignesFactures", b =>
                {
                    b.HasOne("Garderie.Models.ObjetsFacturables", "ObjetFacturable")
                        .WithMany("LignesFactures")
                        .HasForeignKey("ObjetFacturableId")
                        .HasConstraintName("LignesFactures_ObjetsFacturables_FK");
                });

            modelBuilder.Entity("Garderie.Models.ObjetsFacturables", b =>
                {
                    b.HasOne("Garderie.Models.Activite", "Activite")
                        .WithMany("ObjetsFacturables")
                        .HasForeignKey("ActiviteId")
                        .HasConstraintName("ObjetsFacturables_Activites_FK");

                    b.HasOne("Garderie.Models.Tvas", "Tva")
                        .WithMany("ObjetsFacturables")
                        .HasForeignKey("Tvaid")
                        .HasConstraintName("ObjetsFacturables_TVAs_FK");
                });

            modelBuilder.Entity("Garderie.Models.Parent", b =>
                {
                    b.HasOne("Garderie.Models.Personne", "Personne")
                        .WithMany()
                        .HasForeignKey("ParentId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Garderie.Models.ParentsFactures", b =>
                {
                    b.HasOne("Garderie.Models.Factures", "Facture")
                        .WithMany("ParentsFactures")
                        .HasForeignKey("FactureId")
                        .HasConstraintName("ParentsFactures_Factures_FK");

                    b.HasOne("Garderie.Models.Parent", "Parent")
                        .WithMany("ParentsFactures")
                        .HasForeignKey("ParentId")
                        .HasConstraintName("ParentsFactures_Parents_FK");
                });

            modelBuilder.Entity("Garderie.Models.Participation", b =>
                {
                    b.HasOne("Garderie.Models.Activite", "Activite")
                        .WithMany("Participation")
                        .HasForeignKey("ActiviteId")
                        .HasConstraintName("Participation_Activites_FK");

                    b.HasOne("Garderie.Models.Groupes", "Groupe")
                        .WithMany("Participation")
                        .HasForeignKey("GroupeId")
                        .HasConstraintName("Participation_Groupes_FK");

                    b.HasOne("Garderie.Models.Lieux", "Salle")
                        .WithMany("Participation")
                        .HasForeignKey("SalleId")
                        .HasConstraintName("Participation_Lieux_FK");
                });

            modelBuilder.Entity("Garderie.Models.PersonneAdresse", b =>
                {
                    b.HasOne("Garderie.Models.Adresse", "Adresse")
                        .WithMany("PersonneAdresses")
                        .HasForeignKey("AdresseId")
                        .HasConstraintName("PersonneAdresses_Adresses_FK");

                    b.HasOne("Garderie.Models.Personne", "Personne")
                        .WithMany("PersonneAdresses")
                        .HasForeignKey("PersonneId")
                        .HasConstraintName("PersonneAdresses_Personnes_FK");
                });

            modelBuilder.Entity("Garderie.Models.RapportJournalier", b =>
                {
                    b.HasOne("Garderie.Models.DossiersInscription", "DossierInscription")
                        .WithMany("RapportJournalier")
                        .HasForeignKey("DossierInscriptionId")
                        .HasConstraintName("RapportJournalier_DossiersInscription_FK");
                });

            modelBuilder.Entity("Garderie.Models.Traitements", b =>
                {
                    b.HasOne("Garderie.Models.Enfant", "Enfant")
                        .WithMany("Traitements")
                        .HasForeignKey("EnfantId")
                        .HasConstraintName("Traitements_Enfants_FK");

                    b.HasOne("Garderie.Models.Maladies", "Maladie")
                        .WithMany("Traitements")
                        .HasForeignKey("MaladieId")
                        .HasConstraintName("Traitements_Maladies_FK");
                });
#pragma warning restore 612, 618
        }
    }
}
